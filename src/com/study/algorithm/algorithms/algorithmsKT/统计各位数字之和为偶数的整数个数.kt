package com.study.algorithm.algorithms.algorithmsKT

//给你一个正整数 num ，请你统计并返回 小于或等于 num 且各位数字之和为 偶数 的正整数的数目。
//
//正整数的 各位数字之和 是其所有位上的对应数字相加的结果。
//
// 
//
//示例 1：
//
//输入：num = 4
//输出：2
//解释：
//只有 2 和 4 满足小于等于 4 且各位数字之和为偶数。
//示例 2：
//
//输入：num = 30
//输出：14
//解释：
//只有 14 个整数满足小于等于 30 且各位数字之和为偶数，分别是：
//2、4、6、8、11、13、15、17、19、20、22、24、26 和 28 。
// 
//
//提示：
//
//1 <= num <= 1000
//
//来源：力扣（LeetCode）
//链接：https://leetcode.cn/problems/count-integers-with-even-digit-sum
//著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
class 统计各位数字之和为偶数的整数个数 {
    fun countEven(num: Int): Int {
        //数学
        //注意到每10个数会贡献出5个总和是偶数的数
        //那么首先可以确定符合条件的数有(num/10)*5个数
        //其次,除去个位数后,如果各个数之和为偶数,那么个位数unit是0,2,4,6,8时,所有数之和将为偶数,偶数的个数和unit的关系为unit / 2 + 1
        //如果除去个位数后,各个数之和为奇数,那么个位数unit的1,3,5,7,9,所有数之和将为偶数,偶数的个数和unit的关系为(unit + 1) / 2
        //最后,因为num是正整数,所以结果需要-1(不算0)
        val unit = num % 10
        var n = num - unit
        var res = ((n / 10) * 5) - 1
        var s = 0
        while (n > 0) {
            s += n % 10
            n /= 10
        }
        res += if (s % 2 == 0) {
            unit / 2 + 1
        } else {
            (unit + 1) / 2
        }
        return res
    }
}